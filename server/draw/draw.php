<?php

// Get all stickers in the stickers folder
$side = $_REQUEST['side'];

$files = scandir('./stickers');
$css = "";
$html = <<<HTML
        <div class="page">
HTML;

$j = 0;
foreach ($files as $i=>$file) {
  if ($file == '.' || $file == '..' || is_dir($file)) {
    continue;
  }

  $filename = array_pop(explode("/", $file));

  $id = preg_replace("@[^a-z0-9]@i", '', $filename);
  $active = $j===0 ? "active" : "";

  $html .= <<<HTML
            <div class="tool {$id} {$active}" data-file="$filename"><div class="icon"></div></div>
HTML;
  $j++;
  if($j %14 == 0) {
    $html .= <<<HTML
          </div><div class="page">
HTML;
  }
  
  $css .= <<<CSS
#toolset-sticker .tool.{$id} .icon {
  background-image: url("/draw/stickers/{$filename}");
}
CSS;
}

$html .= <<<HTML
          </div>
HTML;


$width = (ceil($j/14) * 574) . "px";

?>
<!doctype html>
<html>
  <head>
    <title>Riot Purikura - Drawing</title>
    <meta name="viewport" content="width=700, user-scalable=no, initial-scale=.84" />
    <script src="/draw/jquery-1.11.3.min.js"></script>
    <script src="/draw/DrawingBoard.js"></script>
    <script src="/draw/DrawingBoardUtils.js"></script>
    <style>

body {
  width: 700px;
  height: 1064px;
  overflow: hidden;
}

.leftcol {
  width: 120px;
  min-height: 800px;
  float: left;
  margin: 0px 10px;
}

.leftcol .active {
  background-color: #333;
}

.rightcol {
  width: 560px;
  float: left;
}

.photos .photothumb {
  width: 100px;
  border: 1px solid black;
  float: left;
  margin-right: 7px;
  position: relative;
}

.photos .photothumb.last {
  margin-right: 4px;
}

.photos .photothumb.active {
  opacity: .5;
  background-color: black;
}

.photos .photothumb img {
  width: 100px;
  height: 133px;
  position: absolute;
  z-index: 0;
}

.photos .photothumb img.overlay {
  z-index: 1;
}

.photos #donebtn {
  width: 100px;
  height: 133px;
  display: inline-block;
  background-image: url('/draw/assets/done-pink.png');
  background-position: 0px 35px;
  background-repeat: no-repeat;
}

body.blue .photos #donebtn {
  background-image: url('/draw/assets/done-blue.png');
}

.easel {
  position: relative;
  height: 736px;
  width: 552px;
}

.easel #backdrop {
  z-index: 0;
  position: absolute;
  top: 0px;
  left: 0px;
  height: 736px;
  width: 552px;
}

.easel #canvas {
  z-index: 10;
  position: absolute;
  top: 0px;
  left: 0px;
  height: 736px;
  width: 552px;
}

.toolbox div {
  width: 100px;
  height: 100px;
  margin: 5px 8px 5px;
}

.toolbox .undo { 
  margin-top: 0px;
  background-image: url("/draw/assets/undo-pink.png");
  background-position: 0px 30px;
  background-repeat: no-repeat;
}

body.blue .toolbox .undo {
  background-image: url("/draw/assets/undo-blue.png");
}

.toolbox .tooltype {
  background-size: 100px 100px;
  background-repeat: no-repeat;
}

.toolbox .eraser {
  background-image: url("/draw/assets/eraser-pink.gif");
}
body.blue .toolbox .eraser {
  background-image: url("/draw/assets/eraser-blue.gif");
}

.toolbox .paint {
  background-image: url("/draw/assets/paint-pink.gif");
}
body.blue .toolbox .paint {
  background-image: url("/draw/assets/paint-blue.gif");
}

.toolbox .sticker {
  background-image: url("/draw/assets/sticker-pink.gif");
}
body.blue .toolbox .sticker {
  background-image: url("/draw/assets/sticker-blue.gif");
}

.toolbox .roller {
  background-image: url("/draw/assets/roller-pink.gif");
}
body.blue .toolbox .roller {
  background-image: url("/draw/assets/roller-blue.gif");
}

/* autogenerated stickers */
<?php echo $css; ?>


.donemsg {
  width: 900px;
  height: 1200px;
  background-color: rgba(255,255,255,.5);
  position: absolute;
  z-index: 10000;
  top: 0px; 
  left: 0px;
  display: none;
}

.donemsg .proceed {
  width: 500px;
  height: 350px;
  position: absolute;
  top: 370px;
  left: 100px;
  background-image: url("/draw/assets/proceed-pink.png");
}

body.blue .donemsg .proceed {
  background-image: url("/draw/assets/proceed-blue.png");
}

.tutorial {
  position: absolute;
  top: 0px;
  left: 0px;
  width: 700px;
  height: 1200px;
  z-index: 10000;
  background-image: url("/draw/assets/tutorial-pink.png");
}

body.blue .tutorial {
  background-image: url("/draw/assets/tutorial-blue.png");
}

    </style>
    <link rel="stylesheet" href="/draw/css/tools.css"/>
    <link rel="stylesheet" href="/draw/css/transforms.css"/>
  </head>
  <body class="<?php echo strtolower($side); ?>">
    <div class="tutorial"></div>
    <div class="leftcol">
      <div class="toolbox">
        <div class="undo" id="undobtn"></div>
        <div class="tooltype eraser" data-type="eraser"></div>
        <div class="tooltype paint" data-type="paint"></div>
        <div class="tooltype sticker active" data-type="sticker"></div>
        <div class="tooltype roller" data-type="roller"></div>
      </div>
      <div class="transforms">
        <div class="label size"></div>
        <div class="transform plus" data-transform="larger"></div>
        <div class="transform minus" data-transform="smaller"></div>
        <div id="rotato" style="visibility: visible;">
          <div class="label rotate"></div>
          <div class="transform ccw" data-transform="ccw"></div>
          <div class="transform cw" data-transform="cw"></div>
        </div>
      </div>
    </div>
    <div class="rightcol">
      <div class="photos">
        <div class="photothumb" data-num="1">
          <img class="photo">
          <img class="overlay">
        </div>
        <div class="photothumb" data-num="2">
          <img class="photo">
          <img class="overlay">
        </div>
        <div class="photothumb" data-num="3">
          <img class="photo">
          <img class="overlay">
        </div>
        <div class="photothumb" data-num="4">
          <img class="photo">
          <img class="overlay">
        </div>
        <div class="done" id="donebtn">
        </div>
      </div>
      <div class="easel" id="easel">
        <img id="backdrop">
        <canvas id="canvas" class="drawing-board-canvas"></canvas>
      </div>
    </div>
    <div class="tray">
      <div class="left arrow" data-dir="left"></div>
      <div class="tools size2 angle5">
        <div class="toolset" id="toolset-paint" data-type="paint">
          <div class="tool active pink" data-color="#ff0066"><div class="icon"></div></div>
          <div class="tool yellow" data-color="#ffff00"><div class="icon"></div></div>
          <div class="tool blue" data-color="#0066ff"><div class="icon"></div></div>
          <div class="tool orange" data-color="#ff6600"><div class="icon"></div></div>
          <div class="tool red" data-color="#ff0000"><div class="icon"></div></div>
          <div class="tool green" data-color="#33cc00"><div class="icon"></div></div>
          <div class="tool purple" data-color="#9900cc"><div class="icon"></div></div>
          <div class="tool pink inverse" data-inverse="true" data-color="#ff0066"><div class="icon"></div></div>
          <div class="tool yellow inverse" data-inverse="true" data-color="#ffff00"><div class="icon"></div></div>
          <div class="tool blue inverse" data-inverse="true" data-color="#0066ff"><div class="icon"></div></div>
          <div class="tool orange inverse" data-inverse="true" data-color="#ff6600"><div class="icon"></div></div>
          <div class="tool red inverse" data-inverse="true" data-color="#ff0000"><div class="icon"></div></div>
          <div class="tool green inverse" data-inverse="true" data-color="#33cc00"><div class="icon"></div></div>
          <div class="tool purple inverse" data-inverse="true" data-color="#9900cc"><div class="icon"></div></div>
        </div>
        <div class="toolset active" id="toolset-sticker" data-type="sticker">
          <div class="slider" style="width: <?php echo $width; ?>">
            <!-- Autogenerated Sticker HTML here -->
            <?php echo $html; ?>
          </div>
        </div>
        <div class="toolset" id="toolset-roller" data-type="roller">
          <div class="tool active" data-set="0">
            <div class="iconset">
              <div class="icon" style="background-image: url('/draw/rollers/purikurarollers_28.png');"></div>
              <div class="icon" style="background-image: url('/draw/rollers/purikurarollers_29.png');"></div>
              <div class="icon" style="background-image: url('/draw/rollers/purikurarollers_30.png');"></div>
            </div>
          </div>
          <div class="tool" data-set="1">
            <div class="iconset">
              <div class="icon" style="background-image: url('/draw/rollers/purikurarollers_31.png');"></div>
              <div class="icon" style="background-image: url('/draw/rollers/purikurarollers_32.png');"></div>
              <div class="icon" style="background-image: url('/draw/rollers/purikurarollers_33.png');"></div>
            </div>
          </div>
          <div class="tool" data-set="2">
            <div class="iconset">
              <div class="icon" style="background-image: url('/draw/rollers/purikurarollers_34.png');"></div>
              <div class="icon" style="background-image: url('/draw/rollers/purikurarollers_35.png');"></div>
              <div class="icon" style="background-image: url('/draw/rollers/purikurarollers_36.png');"></div>
            </div>
          </div>
          <div class="tool" data-set="3">
            <div class="iconset">
              <div class="icon" style="background-image: url('/draw/rollers/purikurarollers_37.png');"></div>
              <div class="icon" style="background-image: url('/draw/rollers/purikurarollers_38.png');"></div>
              <div class="icon" style="background-image: url('/draw/rollers/purikurarollers_39.png');"></div>
            </div>
          </div>
          <div class="tool" data-set="4">
            <div class="iconset">
              <div class="icon" style="background-image: url('/draw/rollers/purikurarollers_40.png');"></div>
              <div class="icon" style="background-image: url('/draw/rollers/purikurarollers_41.png');"></div>
              <div class="icon" style="background-image: url('/draw/rollers/purikurarollers_42.png');"></div>
            </div>
          </div>
        </div>
      </div>

      <div class="right arrow" data-dir="right"></div>
    </div>
    <div class="drawing-board-sticker-hover"></div>
    <div class="donemsg">
      <div class="proceed"></div>
    </div>
    <script>
      var side, code, urlBase, currentPhoto, currentPhotoNum, activeTool;
      var canvasLocked = true;
      // indexed at 1
      var toolSize = 2;
      var stickerAngle = 5;


      var canvas, context, board;
      var backdrop = $('img#backdrop');
      var photoThumbs = $('div.photothumb');
      var toolTypes = $('.toolbox .tooltype');
      var toolsDiv = $('div.tools');
      var toolSets = $('.tools .toolset');
      var undoBtn = $('div#undobtn');
      var transforms = $('div.transforms .transform');
      var arrows = $('.tray .arrow');

      var brushSizes = [10, 20, 30, 40];
      var brushOuterSizes = [4, 5, 6, 8];
      var stickerSizes = [[80,80], [120,120], [200,200], [300,300]];
      var stickerAngles = [-90, -45, -30, -15, 0, 15, 30, 45, 90];
      var rollerSizes = [30,40,55,70];

      var rollerSets = [
        [
          '/draw/rollers/purikurarollers_28.png',
          '/draw/rollers/purikurarollers_29.png',
          '/draw/rollers/purikurarollers_30.png',
        ],
        [
          '/draw/rollers/purikurarollers_31.png',
          '/draw/rollers/purikurarollers_32.png',
          '/draw/rollers/purikurarollers_33.png',
        ],
        [
          '/draw/rollers/purikurarollers_34.png',
          '/draw/rollers/purikurarollers_35.png',
          '/draw/rollers/purikurarollers_36.png',
        ],
        [
          '/draw/rollers/purikurarollers_37.png',
          '/draw/rollers/purikurarollers_38.png',
          '/draw/rollers/purikurarollers_39.png',
        ],
        [
          '/draw/rollers/purikurarollers_40.png',
          '/draw/rollers/purikurarollers_41.png',
          '/draw/rollers/purikurarollers_42.png',
        ]
      ];

      // Slider stuff

      var stickerPages = 0;
      var currentStickerPage = 1;

      function init(){
        // Get side from query
        var matches = location.search.match(/side=([^&]*)/);
        if (!matches || !matches[1]) {
          location.href = '/draw/';
        }
        side = matches[1];

        // get code from query
        matches = location.search.match(/code=([^&]*)/);
        if (!matches || !matches[1]) {
          location.href = '/draw/?side='+side;
        }
        code = matches[1];

        // Setup the canvas
        canvas = document.getElementById('canvas');
        context = canvas.getContext('2d');

        board = new window.DrawingBoard.Board('easel', {
          size: brushSizes[toolSize - 1],
          outerSize: brushOuterSizes[toolSize -1],
        });

        board.setMode("sticker");

        // Setup tools
        toolTypes.on('click', handleToolTypeSwitch);

        undoBtn.on('click', handleUndo);
        _addActiveListeners(undoBtn);

        transforms.on('click', handleTransform);
        _addActiveListeners(transforms);

        toolSets.each(function(){
          var toolSet = $(this);
          var toolsInThisSet = toolSet.find(".tool");
          toolsInThisSet.on("click", function(e) {
            handleToolSwitch($(this), toolSet);
          });
        });

        stickerPages = Math.ceil($('#toolset-sticker .tool').length / 14);

        arrows.on('click', handleArrow);
        _addActiveListeners(arrows);


        var doneBtn = $('#donebtn');
        _addActiveListeners(doneBtn);
        doneBtn.on("click", handleDone);

        urlBase = '/photos/'+side+'/'+code+'/';

        // Load photothumbs
        photoThumbs.each(function(){
          var photoThumb = $(this);
          var num = photoThumb.attr('data-num');
          photoThumb.find('img.photo').attr('src', urlBase + 'photo'+num+'.jpg');

          var overlay = new Image();
          overlay.onload = function(){
            photoThumb.find('img.overlay').attr('src', overlay.src);
          };
          overlay.src = _overlayUrl(num);
        });

        photoThumbs.on('click', handleThumbSwitch);

        currentPhotoNum = 1;
        currentPhoto = urlBase + 'photo1.jpg';

        sizeChanged();
        colorChanged();
        stickerChanged();
        rollerChanged();
        setupCurrentPhoto();
      }

      function setupCurrentPhoto(){
        lockCanvas();

        // clear the canvas
        context.clearRect(0, 0, canvas.width, canvas.height);

        // Set backdrop
        backdrop.attr('src', currentPhoto);

        // setup photothumbs with active class
        photoThumbs.each(function(){
          var photoThumb = $(this);
          var num = photoThumb.attr('data-num');
          if (num == currentPhotoNum) {
            photoThumb.addClass('active');
          } else {
            photoThumb.removeClass('active');
          }
        });

        // Try to get the overlay
        var overlay = new Image();
        overlay.onload = function(){ 
          context.drawImage(overlay, 0, 0);
          unlockCanvas();
        }
        overlay.onerror = function() {
          unlockCanvas();
        }
        overlay.src = _overlayUrl(currentPhotoNum);
      }



      function lockCanvas() {
        canvasLocked = true;
      }

      function unlockCanvas() {
        board.initHistory();
        board.saveHistory();
        canvasLocked = false;
      }


      function handleThumbSwitch(e) {
        if (canvasLocked) {
          return;
        }

        // get next thumb
        var thumb = $(this);
        var next = thumb.attr('data-num');
        if (next == currentPhotoNum) {
          return;
        }

        // First save the overlay
        saveOverlay(function(){
          // Now setup our next photo
          currentPhotoNum = next;
          currentPhoto = urlBase + 'photo' + currentPhotoNum + '.jpg';
          setupCurrentPhoto();

        });
      }

      function handleToolTypeSwitch(e) {
        if (canvasLocked) {
          return;
        }

        var toolTypeEl = $(this);
        var toolType = toolTypeEl.attr('data-type');
        toolTypes.removeClass('active');
        toolTypeEl.addClass('active');
        toolSets.removeClass('active');
        if (toolType != 'eraser') {
          $('#toolset-'+toolType).addClass('active');
        }

        if (toolType != "sticker") {
          $('#rotato').css('visibility', 'hidden');
          arrows.css('visibility', 'hidden');
        } else {
          $('#rotato').css('visibility', 'visible');
          arrows.css('visibility', 'visible');
        }


        switch (toolType) {
          case "eraser":
            board.setMode("eraser");
            break;
          case "paint":
            board.setMode("pencil");
            colorChanged();
            break;
          case "sticker":
            board.setMode("sticker");
            stickerChanged();
            break;
          case "roller":
            board.setMode("roller");
            rollerChanged();
        }


        activeTool = toolType;
      }

      function handleToolSwitch(tool, toolset) {
        if (canvasLocked) {
          return;
        }
        toolset.find('.tool').removeClass('active');
        tool.addClass('active');

        // get type
        var type = toolset.attr('data-type');
        switch (type) {
          case "paint":
            colorChanged();
            break;
          case "sticker":
            stickerChanged();
            break;
          case "roller":
            rollerChanged();
            break;
        }

      }

      function handleUndo(e) {
        if (canvasLocked) {
          return;
        }
        // Reset to last saved state
        board.goBackInHistory();
      }

      function handleTransform(e) {
        if (canvasLocked) {
          return;
        }
        var type = $(this).attr('data-transform');
        switch (type) {
          case "smaller":
            if (toolSize != 1) {
              toolSize--;
              sizeChanged();
            }
            break;
          case "larger":
            if (toolSize != 4) {
              toolSize++;
              sizeChanged();
            }
            break;
          case "ccw": 
            if (stickerAngle != 1) {
              stickerAngle--;
              angleChanged();
            }
            break;
          case "cw":
            if (stickerAngle != stickerAngles.length) {
              stickerAngle++;
              angleChanged();
            }
            break;

        }
      }

      function handleArrow(){
        var dir = $(this).attr('data-dir');
        if (dir == 'left') {
          if (currentStickerPage == 1) {
            currentStickerPage = stickerPages;
          } else {
            currentStickerPage--;
          }
        } else {
          if (currentStickerPage == stickerPages) {
            currentStickerPage = 1;
          } else {
            currentStickerPage++;
          }
        }

        var left = -1 * (currentStickerPage - 1) * 574;
        toolsDiv.find(".slider").css({
          "left": left+"px"
        })

      }

      function sizeChanged() {
        // Change class on tools div
        for (var i=1; i<5; i++) {
          if (i==toolSize){
            toolsDiv.addClass("size"+i);
          } else {
            toolsDiv.removeClass("size"+i);
          }
        }

        // update board with size
        board.opts.size = brushSizes[toolSize -1];
        board.opts.outerSize = brushOuterSizes[toolSize -1];
        board.opts.stickerSize = stickerSizes[toolSize-1];
        board.opts.rollerSize = rollerSizes[toolSize-1];
      }

      function angleChanged() {
        // Change class on tools div
        for (var i=1; i<=stickerAngles.length; i++) {
          if (i==stickerAngle){
            toolsDiv.addClass("angle"+i);
          } else {
            toolsDiv.removeClass("angle"+i);
          }
        }

        // update board with angle
        board.opts.stickerRotate = stickerAngles[stickerAngle-1];
      }

      function colorChanged() {
        var activeColor = toolsDiv.find("#toolset-paint .tool.active");
        var color = activeColor.attr('data-color');
        var inverse = activeColor.attr('data-inverse') ? true : false;
        if (inverse) {
          board.opts.color = '#fff';
          board.opts.outerColor = color;
        } else {
          board.opts.color = color;
          board.opts.outerColor = '#fff';
        }
      }

      function stickerChanged() {
        var activeSticker = toolsDiv.find("#toolset-sticker .tool.active");
        var stickerFile = "/draw/stickers/" + activeSticker.attr("data-file");
        board.opts.stickerFile = stickerFile;
      }

      function rollerChanged() {
        var activeRoller = toolsDiv.find("#toolset-roller .tool.active");
        var activeRollerSet = activeRoller.attr('data-set');
        board.updateRollers(rollerSets[activeRollerSet]);
      }

      function saveOverlay(callback) {
        var dataURL = canvas.toDataURL();
        $.ajax({
          type: "POST", 
          url: "/",
          data: {
            "action": "overlay", 
            "code": code,
            "side": side,
            "num": currentPhotoNum,
            "overlay": dataURL
          },
          success: function(resp) {
            console.log("Saved overlay for "+currentPhotoNum);

            // Refresh overlay for the one we just saved
            $("div.photothumb[data-num="+currentPhotoNum+"] img.overlay").attr("src", _overlayUrl(currentPhotoNum));


            callback.apply();
          }, 
          error: function(e) {
            console.log(e);
          }
        });

      }

      function handleDone() {
        if (canvasLocked) {
          return;
        }
        if (window.confirm("Are you done drawing on all four pictures?\n(If not, you can click on a photo to edit it!)")) {
          lockCanvas();
          // Save the current overlay
          saveOverlay(function(){
            $.ajax({
              type:"POST",
              url: "/",
              data: {
                "action": "done",
                "code": code,
                "side": side
              },
              success: function(resp) {
                if (resp.message) {
                  $('.donemsg').show();
                  setTimeout(function(){
                    location.href = '/draw/?side='+side;
                  }, 6000);
                } else {
                  alert(resp.error);
                }
              },
              error: function(e) {
                console.log(e);
              }
            })
          });
        }
      }

      function _addActiveListeners(el){
        el.on('mousedown touchstart', function(){
          $(this).addClass('active');
        });
        el.on('mouseup touchend', function(){
          $(this).removeClass('active');
        })
      }

      function _overlayUrl(num) {
        return urlBase + "overlay"+num+".png?rand="+(Math.random() * 100000);
      }

      $(init);

      setTimeout(function(){ $(".tutorial").hide(); }, 15000);
      $(".tutorial").on("click", function(){
        $(this).hide();
      });
    </script>
  </body>
</html>